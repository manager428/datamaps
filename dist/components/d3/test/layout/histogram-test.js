function elements(e){var t=[],n=-1,r=e.length;while(++n<r)t.push(e[n]);return t}function metadata(e){var t={};return"x"in e&&(t.x=e.x),"y"in e&&(t.y=e.y),"dx"in e&&(t.dx=e.dx),t}require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.layout.histogram");suite.addBatch({histogram:{topic:function(){return d3.layout.histogram},"defaults to frequencies":function(e){var t=e();assert.deepEqual(t([0,0,0,1,2,2]).map(elements),[[0,0,0],[],[1],[2,2]])},"each bin contains the matching source elements":function(e){var t=e();assert.deepEqual(t([0,0,0,1,2,2]).map(elements),[[0,0,0],[],[1],[2,2]])},"each bin also has defined x, y and dx properties":function(e){var t=e();assert.deepEqual(t([0,0,0,1,2,2]).map(metadata),[{x:0,y:3,dx:.5},{x:.5,y:0,dx:.5},{x:1,y:1,dx:.5},{x:1.5,y:2,dx:.5}])},"can output frequencies":function(e){var t=e().frequency(!0);assert.deepEqual(t([0,0,0,1,2,2]).map(metadata),[{x:0,y:3,dx:.5},{x:.5,y:0,dx:.5},{x:1,y:1,dx:.5},{x:1.5,y:2,dx:.5}])},"can output probabilities":function(e){var t=e().frequency(!1);assert.deepEqual(t([0,0,0,1,2,2]).map(metadata),[{x:0,y:.5,dx:.5},{x:.5,y:0,dx:.5},{x:1,y:1/6,dx:.5},{x:1.5,y:2/6,dx:.5}])},"can specify number of bins":function(e){var t=e().bins(2);assert.deepEqual(t([0,0,0,1,2,2]).map(elements),[[0,0,0],[1,2,2]]),assert.deepEqual(t([0,0,0,1,2,2]).map(metadata),[{x:0,y:3,dx:1},{x:1,y:3,dx:1}])},"can specify bin thresholds":function(e){var t=e().bins([0,1,2,3]);assert.deepEqual(t([0,0,0,1,2,2]).map(elements),[[0,0,0],[1],[2,2]]),assert.deepEqual(t([0,0,0,1,2,2]).map(metadata),[{x:0,y:3,dx:1},{x:1,y:1,dx:1},{x:2,y:2,dx:1}])},"returns the empty array with fewer than two bins":function(e){var t=e().bins([1]);assert.deepEqual(t([0]),[]);var t=e().bins([]);assert.deepEqual(t([0]),[])}}}),suite.export(module)