require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.text");suite.addBatch({text:{topic:function(){var e=this.callback;return d3.text("examples/data/sample.txt",function(t){e(null,t)})},"invokes the callback with the loaded text":function(e){assert.equal(e,"Hello, world!\n")},"does not override the mime type by default":function(e){assert.isUndefined(XMLHttpRequest._last._info.mimeType)},"":{topic:function(){var e=this.callback;return d3.text("examples/data/sample.txt","text/plain+sample",function(t){e(null,t)})},"observes the optional mime type":function(e){assert.equal(XMLHttpRequest._last._info.mimeType,"text/plain+sample")}}," ":{topic:function(){var e=this.callback;return d3.text("//does/not/exist.txt",function(t){e(null,t)})},"invokes the callback with null when an error occurs":function(e){assert.isNull(e)}}}}),suite.export(module)