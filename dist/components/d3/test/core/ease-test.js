require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.ease");suite.addBatch({ease:{topic:function(){return d3.ease},"supports linear easing":function(e){var t=e("linear");assert.inDelta(t(.5),.5,1e-6)},"supports polynomial easing":function(e){var t=e("poly",2);assert.inDelta(t(.5),.25,1e-6)},"supports quadratic easing":function(e){var t=e("quad");assert.inDelta(t(.5),.25,1e-6)},"supports cubic easing":function(e){var t=e("cubic");assert.inDelta(t(.5),.125,1e-6)},"supports sinusoidal easing":function(e){var t=e("sin");assert.inDelta(t(.5),1-Math.cos(Math.PI/4),1e-6)},"supports exponential easing":function(e){var t=e("exp");assert.inDelta(t(.5),.03125,1e-6)},"supports circular easing":function(e){var t=e("circle");assert.inDelta(t(.5),.133975,1e-6)},"supports elastic easing":function(e){var t=e("elastic");assert.inDelta(t(.5),.976061,1e-6)},"supports back easing":function(e){var t=e("back");assert.inDelta(t(.5),-0.0876975,1e-6)},"supports bounce easing":function(e){var t=e("bounce");assert.inDelta(t(.5),.765625,1e-6)},"invalid eases and modes default to linear-in":function(e){var t=e("__proto__-__proto__");assert.equal(t(0),0),assert.equal(t(.5),.5),assert.equal(t(1),1);var t=e("hasOwnProperty-constructor");assert.equal(t(0),0),assert.equal(t(.5),.5),assert.equal(t(1),1)},"all easing functions return exactly 0 for t = 0":function(e){assert.equal(e("linear")(0),0),assert.equal(e("poly",2)(0),0),assert.equal(e("quad")(0),0),assert.equal(e("cubic")(0),0),assert.equal(e("sin")(0),0),assert.equal(e("exp")(0),0),assert.equal(e("circle")(0),0),assert.equal(e("elastic")(0),0),assert.equal(e("back")(0),0),assert.equal(e("bounce")(0),0)},"all easing functions return exactly 1 for t = 1":function(e){assert.equal(e("linear")(1),1),assert.equal(e("poly",2)(1),1),assert.equal(e("quad")(1),1),assert.equal(e("cubic")(1),1),assert.equal(e("sin")(1),1),assert.equal(e("exp")(1),1),assert.equal(e("circle")(1),1),assert.equal(e("elastic")(1),1),assert.equal(e("back")(1),1),assert.equal(e("bounce")(1),1)},"the -in suffix returns the identity":function(e){assert.inDelta(e("linear-in")(.25),e("linear")(.25),1e-6),assert.inDelta(e("quad-in")(.75),e("quad")(.75),1e-6)},"the -out suffix returns the reverse":function(e){assert.inDelta(e("sin-out")(.25),1-e("sin-in")(.75),1e-6),assert.inDelta(e("bounce-out")(.25),1-e("bounce-in")(.75),1e-6),assert.inDelta(e("elastic-out")(.25),1-e("elastic-in")(.75),1e-6)},"the -in-out suffix returns the reflection":function(e){assert.inDelta(e("sin-in-out")(.25),.5*e("sin-in")(.5),1e-6),assert.inDelta(e("bounce-in-out")(.25),.5*e("bounce-in")(.5),1e-6),assert.inDelta(e("elastic-in-out")(.25),.5*e("elastic-in")(.5),1e-6)},"the -out-in suffix returns the reverse reflection":function(e){assert.inDelta(e("sin-out-in")(.25),.5*e("sin-out")(.5),1e-6),assert.inDelta(e("bounce-out-in")(.25),.5*e("bounce-out")(.5),1e-6),assert.inDelta(e("elastic-out-in")(.25),.5*e("elastic-out")(.5),1e-6)},"clamps input time":function(e){var t=e("linear");assert.inDelta(t(-1),0,1e-6),assert.inDelta(t(2),1,1e-6)},poly:{"supports an optional polynomial":function(e){var t=e("poly",1);assert.inDelta(t(.5),.5,1e-6);var t=e("poly",.5);assert.inDelta(t(.5),Math.SQRT1_2,1e-6)}},elastic:{"supports an optional amplifier (>1)":function(e){var t=e("elastic",1.5);assert.inDelta(t(.5),.998519,1e-6)},"supports an optional amplifier (>1) and period (>0)":function(e){var t=e("elastic",1.5,.5);assert.inDelta(t(.5),.96875,1e-6)}},back:{"supports an optional speed":function(e){var t=e("back",2);assert.inDelta(t(.5),-0.125,1e-6)}}}}),suite.export(module)