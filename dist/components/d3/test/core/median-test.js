require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.median");suite.addBatch({median:{topic:function(){return d3.median},"returns the median value for numbers":function(e){assert.equal(e([1]),1),assert.equal(e([5,1,2,3,4]),3),assert.equal(e([20,3]),11.5),assert.equal(e([3,20]),11.5)},"ignores null, undefined and NaN":function(e){assert.equal(e([NaN,1,2,3,4,5]),3),assert.equal(e([1,2,3,4,5,NaN]),3),assert.equal(e([10,null,3,undefined,5,NaN]),5)},"can handle large numbers without overflowing":function(e){assert.equal(e([Number.MAX_VALUE,Number.MAX_VALUE]),Number.MAX_VALUE),assert.equal(e([-Number.MAX_VALUE,-Number.MAX_VALUE]),-Number.MAX_VALUE)},"returns undefined for empty array":function(e){assert.isUndefined(e([])),assert.isUndefined(e([null])),assert.isUndefined(e([undefined])),assert.isUndefined(e([NaN])),assert.isUndefined(e([NaN,NaN]))},"applies the optional accessor function":function(e){assert.equal(d3.median([[1,2,3,4,5],[2,4,6,8,10]],function(e){return d3.median(e)}),4.5),assert.equal(d3.median([1,2,3,4,5],function(e,t){return t}),2)}}}),suite.export(module)