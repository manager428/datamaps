require("../env");var assert=require("assert");module.exports={topic:function(){function a(a,f,l){return t.push(a),n.push(f),i.push(l),r.push(this)>=2&&e(null,{selection:o,transition:u,data:t,index:n,value:i,context:r,fails:s}),f&&d3.interpolateHsl(l,"blue")}var e=this.callback,t=[],n=[],r=[],i=[],s=0,o=d3.select("body").html("").append("div").selectAll("div").data(["red","green"]).enter().append("div").style("background-color",function(e){return d3.rgb(e)+""}),u=o.transition().styleTween("background-color",function(){++s}).styleTween("background-color",a)},"defines the corresponding style tween":function(e){assert.typeOf(e.transition.tween("style.background-color"),"function")},"the last style tween takes precedence":function(e){assert.equal(e.fails,0)},"invokes the tween function":function(e){assert.deepEqual(e.data,["red","green"],"expected data, got {actual}"),assert.deepEqual(e.index,[0,1],"expected data, got {actual}"),assert.deepEqual(e.value,["#ff0000","#008000"],"expected value, got {actual}"),assert.domEqual(e.context[0],e.selection[0][0],"expected this, got {actual}"),assert.domEqual(e.context[1],e.selection[0][1],"expected this, got {actual}")},end:{topic:function(e){var t=this.callback;e.transition.each("end",function(n,r){r>=1&&t(null,e)})},"uses the returned interpolator":function(e){assert.equal(e.selection[0][1].style.getPropertyValue("background-color"),"#0000ff")},"does nothing if the interpolator is falsey":function(e){assert.equal(e.selection[0][0].style.getPropertyValue("background-color"),"#ff0000")}}}