require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("selection.filter");suite.addBatch({"selectAll(div)":{topic:function(){return d3.select("body").html("").selectAll("div").data([0,1]).enter().append("div").selectAll("span").data(function(e){return e<<=1,[e,e+1]}).enter().append("span")},"preserves matching elements":function(e){var t=e.filter(function(e,t){return t===0});assert.isTrue(t[0][0]===e[0][0]),assert.isTrue(t[1][0]===e[1][0])},"removes non-matching elements":function(e){var t=d3.merge(e.filter(function(e,t){return e&1}));assert.equal(t.indexOf(e[0][0]),-1),assert.equal(t.indexOf(e[1][0]),-1)},"preserves data":function(e){var t=e.filter(function(e,t){return e&1});assert.equal(t[0][0].__data__,1),assert.equal(t[1][0].__data__,3)},"preserves grouping":function(e){var t=e.filter(function(e,t){return e&1});assert.equal(t.length,2),assert.equal(t[0].length,1),assert.equal(t[1].length,1)},"preserves parent node":function(e){var t=e.filter(function(e,t){return e&1});assert.isTrue(t[0].parentNode===e[0].parentNode),assert.isTrue(t[1].parentNode===e[1].parentNode)},"does not preserve index":function(e){var t=[];e.filter(function(e,t){return e&1}).each(function(e,n){t.push(n)}),assert.deepEqual(t,[0,0])},"ignores null nodes":function(){var e=d3.selectAll("span");e[0][1]=null;var t=e.filter(function(e,t){return e&1});assert.isTrue(t[0][0]===e[0][3]),assert.equal(t.length,1)},"can be specified as a selector":function(e){e.classed("foo",function(e,t){return e&1});var t=e.filter(".foo");assert.equal(t.length,2),assert.equal(t[0].length,1),assert.equal(t[1].length,1)},"returns a new selection":function(e){assert.isFalse(e.filter(function(){return 1})===e)}}}),suite.export(module)