require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.split");suite.addBatch({split:{topic:function(){return d3.split},"splits an array into arrays":function(e){var t={},n={},r={},i={},s={},o={};assert.deepEqual(d3.split([t,null,n,r,undefined,i,s,o]),[[t],[n,r],[i,s,o]])},"splits using the specified function":function(e){assert.deepEqual(d3.split([1,0,2,3,-1,4,5,6],function(e){return e<=0}),[[1],[2,3],[4,5,6]]),assert.deepEqual(d3.split([1,0,2,3,-1,4,5,6],function(e,t){return t&1}),[[1],[2],[-1],[5]])},"ignores delimiters at the start or end":function(e){var t={},n={},r={};assert.deepEqual(d3.split([null,t,n,null,r]),[[t,n],[r]]),assert.deepEqual(d3.split([t,n,null,r,null]),[[t,n],[r]]),assert.deepEqual(d3.split([null,t,n,null,r,null]),[[t,n],[r]]),assert.deepEqual(d3.split([undefined,t,n,undefined,r]),[[t,n],[r]]),assert.deepEqual(d3.split([t,n,undefined,r,undefined]),[[t,n],[r]]),assert.deepEqual(d3.split([undefined,t,n,undefined,r,undefined]),[[t,n],[r]])}}}),suite.export(module)