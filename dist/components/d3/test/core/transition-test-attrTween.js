require("../env");var assert=require("assert");module.exports={topic:function(){function u(u,a,f){return t.push(u),n.push(a),i.push(f),r.push(this)>=2&&e(null,{selection:s,transition:o,data:t,index:n,value:i,context:r}),a&&d3.interpolateHsl(f,"blue")}var e=this.callback,t=[],n=[],r=[],i=[],s=d3.select("body").html("").append("div").selectAll("div").data(["red","green"]).enter().append("div").attr("color",function(e){return d3.rgb(e)+""}),o=s.transition().attrTween("color",u)},"defines the corresponding attr tween":function(e){assert.typeOf(e.transition.tween("attr.color"),"function")},"invokes the tween function":function(e){assert.deepEqual(e.data,["red","green"],"expected data, got {actual}"),assert.deepEqual(e.index,[0,1],"expected data, got {actual}"),assert.deepEqual(e.value,["#ff0000","#008000"],"expected value, got {actual}"),assert.domEqual(e.context[0],e.selection[0][0],"expected this, got {actual}"),assert.domEqual(e.context[1],e.selection[0][1],"expected this, got {actual}")},end:{topic:function(e){var t=this.callback;e.transition.each("end",function(n,r){r>=1&&t(null,e)})},"uses the returned interpolator":function(e){assert.equal(e.selection[0][1].getAttribute("color"),"#0000ff")},"does nothing if the interpolator is falsey":function(e){assert.equal(e.selection[0][0].getAttribute("color"),"#ff0000")}}}