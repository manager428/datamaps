require("../env");var vows=require("vows"),assert=require("assert"),suite=vows.describe("d3.scale.linear");suite.addBatch({linear:{topic:function(){return d3.scale.linear},domain:{"defaults to [0, 1]":function(e){var t=e();assert.deepEqual(t.domain(),[0,1]),assert.inDelta(t(.5),.5,1e-6)},"coerces domain values to numbers":function(e){var t=e().domain([new Date(1990,0,1),new Date(1991,0,1)]);assert.equal(typeof t.domain()[0],"number"),assert.equal(typeof t.domain()[1],"number"),assert.inDelta(t(new Date(1989,9,20)),-0.2,.01),assert.inDelta(t(new Date(1990,0,1)),0,.01),assert.inDelta(t(new Date(1990,2,15)),.2,.01),assert.inDelta(t(new Date(1990,4,27)),.4,.01),assert.inDelta(t(new Date(1991,0,1)),1,.01),assert.inDelta(t(new Date(1991,2,15)),1.2,.01);var t=e().domain(["0","1"]);assert.equal(typeof t.domain()[0],"number"),assert.equal(typeof t.domain()[1],"number"),assert.inDelta(t(.5),.5,1e-6);var t=e().domain([new Number(0),new Number(1)]);assert.equal(typeof t.domain()[0],"number"),assert.equal(typeof t.domain()[1],"number"),assert.inDelta(t(.5),.5,1e-6)},"can specify a polylinear domain and range":function(e){var t=e().domain([-10,0,100]).range(["red","white","green"]);assert.equal(t(-5),"#ff8080"),assert.equal(t(50),"#80c080"),assert.equal(t(75),"#40a040")},"the smaller of the domain or rangeÂ is observed":function(e){var t=e().domain([-10,0]).range(["red","white","green"]).clamp(!0);assert.equal(t(-5),"#ff8080"),assert.equal(t(50),"#ffffff");var t=e().domain([-10,0,100]).range(["red","white"]).clamp(!0);assert.equal(t(-5),"#ff8080"),assert.equal(t(50),"#ffffff")},"an empty domain maps to the range start":function(e){var t=e().domain([0,0]).range(["red","green"]);assert.equal(t(0),"#ff0000"),assert.equal(t(-1),"#ff0000"),assert.equal(t(1),"#ff0000")}},range:{"defaults to [0, 1]":function(e){var t=e();assert.deepEqual(t.range(),[0,1]),assert.inDelta(t.invert(.5),.5,1e-6)},"does not coerce range to numbers":function(e){var t=e().range(["0","2"]);assert.equal(typeof t.range()[0],"string"),assert.equal(typeof t.range()[1],"string")},"can specify range values as colors":function(e){var t=e().range(["red","blue"]);assert.equal(t(.5),"#800080");var t=e().range(["#ff0000","#0000ff"]);assert.equal(t(.5),"#800080");var t=e().range(["#f00","#00f"]);assert.equal(t(.5),"#800080");var t=e().range([d3.rgb(255,0,0),d3.hsl(240,1,.5)]);assert.equal(t(.5),"#800080");var t=e().range(["hsl(0,100%,50%)","hsl(240,100%,50%)"]);assert.equal(t(.5),"#800080")},"can specify range values as arrays or objects":function(e){var t=e().range([{color:"red"},{color:"blue"}]);assert.deepEqual(t(.5),{color:"#800080"});var t=e().range([["red"],["blue"]]);assert.deepEqual(t(.5),["#800080"])}},interpolate:{"defaults to d3.interpolate":function(e){var t=e().range(["red","blue"]);assert.equal(t.interpolate(),d3.interpolate),assert.equal(t(.5),"#800080")},"can specify a custom interpolator":function(e){var t=e().range(["red","blue"]).interpolate(d3.interpolateHsl);assert.equal(t(.5),"#ff00ff")}},clamp:{"defaults to false":function(e){var t=e();assert.isFalse(t.clamp()),assert.inDelta(t(-0.5),-0.5,1e-6),assert.inDelta(t(1.5),1.5,1e-6)},"can clamp to the domain":function(e){var t=e().clamp(!0);assert.inDelta(t(-0.5),0,1e-6),assert.inDelta(t(.5),.5,1e-6),assert.inDelta(t(1.5),1,1e-6);var t=e().domain([1,0]).clamp(!0);assert.inDelta(t(-0.5),1,1e-6),assert.inDelta(t(.5),.5,1e-6),assert.inDelta(t(1.5),0,1e-6)},"can clamp to the range":function(e){var t=e().clamp(!0);assert.inDelta(t.invert(-0.5),0,1e-6),assert.inDelta(t.invert(.5),.5,1e-6),assert.inDelta(t.invert(1.5),1,1e-6);var t=e().range([1,0]).clamp(!0);assert.inDelta(t.invert(-0.5),1,1e-6),assert.inDelta(t.invert(.5),.5,1e-6),assert.inDelta(t.invert(1.5),0,1e-6)}},"maps a number to a number":function(e){var t=e().domain([1,2]);assert.inDelta(t(.5),-0.5,1e-6),assert.inDelta(t(1),0,1e-6),assert.inDelta(t(1.5),.5,1e-6),assert.inDelta(t(2),1,1e-6),assert.inDelta(t(2.5),1.5,1e-6)},invert:{"maps a number to a number":function(e){var t=e().range([1,2]);assert.inDelta(t.invert(.5),-0.5,1e-6),assert.inDelta(t.invert(1),0,1e-6),assert.inDelta(t.invert(1.5),.5,1e-6),assert.inDelta(t.invert(2),1,1e-6),assert.inDelta(t.invert(2.5),1.5,1e-6)},"coerces range value to numbers":function(e){var t=e().range(["0","2"]);assert.inDelta(t.invert("1"),.5,1e-6);var t=e().range([new Date(1990,0,1),new Date(1991,0,1)]);assert.inDelta(t.invert(new Date(1990,6,2,13)),.5,1e-6);var t=e().range(["#000","#fff"]);assert.isNaN(t.invert("#999"))},"can invert a polylinear descending domain":function(e){var t=e().domain([4,2,1]).range([1,2,4]);assert.inDelta(t(1.5),3,1e-6),assert.inDelta(t(3),1.5,1e-6),assert.inDelta(t.invert(1.5),3,1e-6),assert.inDelta(t.invert(3),1.5,1e-6)},"can invert a polylinear descending range":function(e){var t=e().domain([1,2,4]).range([4,2,1]);assert.inDelta(t(1.5),3,1e-6),assert.inDelta(t(3),1.5,1e-6),assert.inDelta(t.invert(1.5),3,1e-6),assert.inDelta(t.invert(3),1.5,1e-6)}},ticks:{"generates ticks of varying degree":function(e){var t=e();assert.deepEqual(t.ticks(1).map(t.tickFormat(1)),[0,1]),assert.deepEqual(t.ticks(2).map(t.tickFormat(2)),[0,.5,1]),assert.deepEqual(t.ticks(5).map(t.tickFormat(5)),[0,.2,.4,.6,.8,1]),assert.deepEqual(t.ticks(10).map(t.tickFormat(10)),[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1]);var t=e().domain([1,0]);assert.deepEqual(t.ticks(1).map(t.tickFormat(1)),[0,1]),assert.deepEqual(t.ticks(2).map(t.tickFormat(2)),[0,.5,1]),assert.deepEqual(t.ticks(5).map(t.tickFormat(5)),[0,.2,.4,.6,.8,1]),assert.deepEqual(t.ticks(10).map(t.tickFormat(10)),[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1])},"formats ticks with the appropriate precision":function(e){var t=e().domain([.123456789,1.23456789]);assert.strictEqual(t.tickFormat(1)(t.ticks(1)[0]),"1"),assert.strictEqual(t.tickFormat(2)(t.ticks(2)[0]),"0.5"),assert.strictEqual(t.tickFormat(4)(t.ticks(4)[0]),"0.2"),assert.strictEqual(t.tickFormat(8)(t.ticks(8)[0]),"0.2"),assert.strictEqual(t.tickFormat(16)(t.ticks(16)[0]),"0.2"),assert.strictEqual(t.tickFormat(32)(t.ticks(32)[0]),"0.15"),assert.strictEqual(t.tickFormat(64)(t.ticks(64)[0]),"0.14"),assert.strictEqual(t.tickFormat(128)(t.ticks(128)[0]),"0.13"),assert.strictEqual(t.tickFormat(256)(t.ticks(256)[0]),"0.125")}},nice:{"nices the domain, extending it to round numbers":function(e){var t=e().domain([1.1,10.9]).nice();assert.deepEqual(t.domain(),[1,11]);var t=e().domain([10.9,1.1]).nice();assert.deepEqual(t.domain(),[11,1]);var t=e().domain([.7,11.001]).nice();assert.deepEqual(t.domain(),[0,12]);var t=e().domain([123.1,6.7]).nice();assert.deepEqual(t.domain(),[130,0]);var t=e().domain([0,.49]).nice();assert.deepEqual(t.domain(),[0,.5])},"has no effect on degenerate domains":function(e){var t=e().domain([0,0]).nice();assert.deepEqual(t.domain(),[0,0]);var t=e().domain([.5,.5]).nice();assert.deepEqual(t.domain(),[.5,.5])},"nicing a polylinear domain only affects the extent":function(e){var t=e().domain([1.1,1,2,3,10.9]).nice();assert.deepEqual(t.domain(),[1,1,2,3,11]);var t=e().domain([123.1,1,2,3,-0.9]).nice();assert.deepEqual(t.domain(),[130,1,2,3,-10])}},copy:{"changes to the domain are isolated":function(e){var t=e(),n=t.copy();t.domain([1,2]),assert.deepEqual(n.domain(),[0,1]),assert.equal(t(1),0),assert.equal(n(1),1),n.domain([2,3]),assert.equal(t(2),1),assert.equal(n(2),0),assert.deepEqual(t.domain(),[1,2]),assert.deepEqual(n.domain(),[2,3])},"changes to the range are isolated":function(e){var t=e(),n=t.copy();t.range([1,2]),assert.equal(t.invert(1),0),assert.equal(n.invert(1),1),assert.deepEqual(n.range(),[0,1]),n.range([2,3]),assert.equal(t.invert(2),1),assert.equal(n.invert(2),0),assert.deepEqual(t.range(),[1,2]),assert.deepEqual(n.range(),[2,3])},"changes to the interpolator are isolated":function(e){var t=e().range(["red","blue"]),n=t.copy();t.interpolate(d3.interpolateHsl),assert.equal(t(.5),"#ff00ff"),assert.equal(n(.5),"#800080"),assert.equal(n.interpolate(),d3.interpolate)},"changes to clamping are isolated":function(e){var t=e().clamp(!0),n=t.copy();t.clamp(!1),assert.equal(t(2),2),assert.equal(n(2),1),assert.isTrue(n.clamp()),n.clamp(!1),assert.equal(t(2),2),assert.equal(n(2),2),assert.isFalse(t.clamp())}}}}),suite.export(module)